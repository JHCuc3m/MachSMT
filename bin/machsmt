#!/usr/bin/env python3
import sys
import traceback
import pdb
import cProfile
from machsmt import MachSMT, die, Benchmark
from machsmt.config import config


def main():
    if len(config.benchmarks) == 0:
        die("Please specify an input benchmark")

    machsmt = MachSMT.load(config.lib)

    benchmarks = [Benchmark(benchmark) for benchmark in config.benchmarks]
    for benchmark in benchmarks: benchmark.parse()
    
    predictions, scores = machsmt.predict(benchmarks,include_scores = True)

    for it, benchmark in enumerate(config.benchmarks):
        print(benchmark)
        print(f"\tMachSMT selects: {predictions[it].get_name()}")
        for solver in sorted(scores[it], key=scores[it].get, reverse=True):
            print(f"\t\t{solver}   {round(100 * scores[it][solver], 3)}%")


if __name__ == '__main__':
    try:
        if config.profile:
            cProfile.run('main()', sort=2)
        else:
            main()
    except BaseException:
        extype, value, tb = sys.exc_info()
        traceback.print_exc()
        if config.debug:
            pdb.post_mortem(tb)
