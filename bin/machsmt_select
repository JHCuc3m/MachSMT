#!/usr/bin/env python3

import argparse
import os
import pickle
import sys

def die(msg):
    print("[machsmt_select] Error: {}".format(msg))
    sys.exit(1)

def check_file(file):
    if not os.path.exists(file):
        die("Could not find input file '{}'".format(args.input))
    if os.path.isdir(args.input):
        die("Given input file is a directory")

if __name__ == "__main__":

    parser = argparse.ArgumentParser()
    parser.add_argument('model', type=str,
                        help="Learned model to be used for solver selection")
    parser.add_argument('input', type=str,
                        help="SMT2 input file to select a solver for")

    args = parser.parse_args()

    if not os.path.isfile(args.input):
        die("Could not find input file '{}'".format(args.input))
    if os.path.isdir(args.input):
        die("Given input file is a directory")
    if not os.path.isfile(args.model):
        die("Could not find learned model '{}'".format(args.model))
    if os.path.isdir(args.model):
        die("Given learned model is a directory")

    with open(args.model, 'rb') as infile:
        lm = pickle.load(infile)
        print(lm.predict(args.input))
